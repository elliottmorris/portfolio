left_column_selected_color = "#000",
blockquote_left_border_color = "lightgray",
table_border_color = "#666",
table_row_border_color = "#ddd",
table_row_even_background_color = "#eee",
base_font_size = "20px",
text_font_size = "1rem",
header_h1_font_size = "2.75rem",
header_h2_font_size = "2.25rem",
header_h3_font_size = "1.75rem",
header_background_auto = FALSE,
header_background_color = header_color,
header_background_text_color = background_color,
header_background_padding = NULL,
header_background_content_padding_top = "7rem",
header_background_ignore_classes = c("normal", "inverse", "title", "middle",
"bottom"),
text_slide_number_font_size = "0.9em",
text_font_google = NULL,
text_font_family = xaringanthemer_font_default("text_font_family"),
text_font_weight = xaringanthemer_font_default("text_font_weight"),
text_font_url = xaringanthemer_font_default("text_font_url"),
text_font_family_fallback = xaringanthemer_font_default("text_font_family_fallback"),
text_font_base = "sans-serif",
header_font_google = NULL,
header_font_family = xaringanthemer_font_default("header_font_family"),
header_font_weight = xaringanthemer_font_default("header_font_weight"),
header_font_url = xaringanthemer_font_default("header_font_url"),
code_font_google = NULL,
code_font_family = xaringanthemer_font_default("code_font_family"),
code_font_size = "0.9rem",
code_font_url = xaringanthemer_font_default("code_font_url"),
code_font_family_fallback = xaringanthemer_font_default("code_font_family_fallback"),
colors = NULL,
extra_css = NULL,
extra_fonts = NULL,
outfile = "custom-xaringan-theme.css"
)
xaringanthemer_font_default("text_font_family")
xaringanthemer_font_default("text_font_weight"),
xaringanthemer_font_default("text_font_weight")
google_font('Merriweather')
?xaringan::moon_reader
xaringan::infinite_moon_reader()
xaringan::infinite_moon_reader()
run servr::daemon_stop(4)
servr::daemon_stop(4)
servr::daemon_stop(3)
servr::daemon_stop(2)
servr::daemon_stop(1)
servr::daemon_stop(4)
# NOTE: EXPORT TO HTML WITH: pressing the knit button
# NOTE: EXPORT TO PDF WITH pagedown::chrome_print("index.Rmd")
# keep updating with xaringan::infinite_moon_reader()
library(knitr)
knitr::opts_chunk$set(echo=F,warning=F,message=F,
eval=TRUE)
library(xaringanthemer)
title_background_color = '#e3120b'
title_text_color = '#fafafa'
inverse_background_color = '#8abbd0'
inverse_text_color = '#fafafa'
header_color = '#0000'
background_color = "#fafafa"
style_xaringan(
text_color = "#000",
header_color = "#000",
background_color = "#FFF",
link_color = "#8abbd0",
text_bold_color = NULL,
text_slide_number_color = inverse_background_color,
padding = "16px 64px 16px 64px",
background_image = NULL,
background_size = NULL,
background_position = NULL,
code_highlight_color = "rgba(255,255,0,0.5)",
code_inline_color = "#000",
code_inline_background_color = NULL,
code_inline_font_size = "1em",
inverse_background_color = inverse_background_color,
inverse_text_color = inverse_text_color,
inverse_text_shadow = FALSE,
inverse_header_color = "#f3f3f3",
title_slide_text_color = title_text_color,
title_slide_background_color = title_background_color,
title_slide_background_image = NULL,
title_slide_background_size = NULL,
title_slide_background_position = NULL,
footnote_color = NULL,
footnote_font_size = "0.9em",
footnote_position_bottom = "60px",
left_column_subtle_color = "#777",
left_column_selected_color = "#000",
blockquote_left_border_color = "lightgray",
table_border_color = "#666",
table_row_border_color = "#ddd",
table_row_even_background_color = "#eee",
base_font_size = "20px",
text_font_size = "1rem",
header_h1_font_size = "2.75rem",
header_h2_font_size = "2.25rem",
header_h3_font_size = "1.75rem",
header_background_auto = FALSE,
header_background_color = header_color,
header_background_text_color = background_color,
header_background_padding = NULL,
header_background_content_padding_top = "7rem",
header_background_ignore_classes = c("normal", "inverse", "title", "middle",
"bottom"),
text_slide_number_font_size = "0.9em",
text_font_google = google_font('Merriweather'),
text_font_family = xaringanthemer_font_default("header_font_family"),
text_font_weight = xaringanthemer_font_default("text_font_weight"),
text_font_url = xaringanthemer_font_default("text_font_url"),
text_font_family_fallback = xaringanthemer_font_default("text_font_family_fallback"),
text_font_base = "sans-serif",
header_font_google = google_font('Merriweather'),
header_font_family = xaringanthemer_font_default("header_font_family"),
header_font_weight = xaringanthemer_font_default("header_font_weight"),
header_font_url = xaringanthemer_font_default("header_font_url"),
code_font_google = google_font('Roboto'),
code_font_family = xaringanthemer_font_default("code_font_family"),
code_font_size = "0.9rem",
code_font_url = xaringanthemer_font_default("code_font_url"),
code_font_family_fallback = xaringanthemer_font_default("code_font_family_fallback"),
colors = NULL,
extra_css = NULL,
extra_fonts = NULL,
outfile = "custom-xaringan-theme.css"
)
knitr::include_graphics('figures/economist_forecast_headline.png')
install.packages("evaluate"
)
install.packages("evaluate")
install.packages('evaluate')
install.packages("rmarkdown")
pagedown::chrome_print("index.Rmd")
library(showtext)
knitr::include_graphics('figures/economist_forecast_headline.png')
pagedown::chrome_print("index.Rmd")
remove.packages("sysfonts")
remove.packages("showtext")
install.packages("sysfonts")
install.packages("showtext")
xaringan::infinite_moon_reader()
xaringan::infinite_moon_reader()
xaringan::infinite_moon_reader()
xaringan::infinite_moon_reader()
xaringan::infinite_moon_reader()
xaringan::infinite_moon_reader()
xaringan::infinite_moon_reader()
# NOTE: EXPORT TO HTML WITH: pressing the knit button
# NOTE: EXPORT TO PDF WITH pagedown::chrome_print("index.Rmd")
# keep updating with xaringan::infinite_moon_reader()
library(knitr)
knitr::opts_chunk$set(echo=F,warning=F,message=F,
eval=TRUE)
library(xaringanthemer)
title_background_color = '#e3120b'
title_text_color = '#fafafa'
inverse_background_color = '#8abbd0'
inverse_text_color = '#fafafa'
header_color = '#0000'
background_color = "#fafafa"
style_xaringan(
text_color = "#000",
header_color = "#000",
background_color = "#FFF",
link_color = "#8abbd0",
text_bold_color = NULL,
text_slide_number_color = inverse_background_color,
padding = "16px 64px 16px 64px",
background_image = NULL,
background_size = NULL,
background_position = NULL,
code_highlight_color = "rgba(255,255,0,0.5)",
code_inline_color = "#000",
code_inline_background_color = NULL,
code_inline_font_size = "1em",
inverse_background_color = inverse_background_color,
inverse_text_color = inverse_text_color,
inverse_text_shadow = FALSE,
inverse_header_color = "#f3f3f3",
title_slide_text_color = title_text_color,
title_slide_background_color = title_background_color,
title_slide_background_image = NULL,
title_slide_background_size = NULL,
title_slide_background_position = NULL,
footnote_color = NULL,
footnote_font_size = "0.9em",
footnote_position_bottom = "60px",
left_column_subtle_color = "#777",
left_column_selected_color = "#000",
blockquote_left_border_color = "lightgray",
table_border_color = "#666",
table_row_border_color = "#ddd",
table_row_even_background_color = "#eee",
base_font_size = "20px",
text_font_size = "1rem",
header_h1_font_size = "2.75rem",
header_h2_font_size = "2.25rem",
header_h3_font_size = "1.75rem",
header_background_auto = FALSE,
header_background_color = header_color,
header_background_text_color = background_color,
header_background_padding = NULL,
header_background_content_padding_top = "7rem",
header_background_ignore_classes = c("normal", "inverse", "title", "middle",
"bottom"),
text_slide_number_font_size = "0.9em",
text_font_google = google_font('Merriweather'),
text_font_family = xaringanthemer_font_default("header_font_family"),
text_font_weight = xaringanthemer_font_default("text_font_weight"),
text_font_url = xaringanthemer_font_default("text_font_url"),
text_font_family_fallback = xaringanthemer_font_default("text_font_family_fallback"),
text_font_base = "sans-serif",
header_font_google = google_font('Merriweather'),
header_font_family = xaringanthemer_font_default("header_font_family"),
header_font_weight = xaringanthemer_font_default("header_font_weight"),
header_font_url = xaringanthemer_font_default("header_font_url"),
code_font_google = google_font('Roboto'),
code_font_family = xaringanthemer_font_default("code_font_family"),
code_font_size = "0.9rem",
code_font_url = xaringanthemer_font_default("code_font_url"),
code_font_family_fallback = xaringanthemer_font_default("code_font_family_fallback"),
colors = NULL,
extra_css = NULL,
extra_fonts = NULL,
outfile = "custom-xaringan-theme.css"
)
pagedown::chrome_print("index.Rmd")
pagedown::chrome_print("index.Rmd")
xaringan::infinite_moon_reader()
xaringan::infinite_moon_reader()
pagedown::chrome_print("index.Rmd")
xaringan::infinite_moon_reader()
xaringan::infinite_moon_reader()
xaringan::infinite_moon_reader()
pagedown::chrome_print("index.Rmd")
pagedown::chrome_print("index.Rmd")
pagedown::chrome_print("index.Rmd")
pagedown::chrome_print("index.Rmd")
library(tidyverse)
dat <- read_delim('~/Desktop/LONG_MI_NATURE_20180111.tab')
dat <- read_table('~/Desktop/LONG_MI_NATURE_20180111.tab')
View(dat)
dat <- load('~/Desktop/LONG_MI_NATURE_20180111.RData')
library(tidyverse)
load('~/Desktop/LONG_MI_NATURE_20180111.RData')
dat <- x
rm(x)
dat <- dat %>% filter(country == "United States")
dat
View(dat)
dat <- dat %>% filter(country == "United States",election == "Presidential")
library(tidyverse)
load('~/Desktop/LONG_MI_NATURE_20180111.RData')
dat <- x
rm(x)
dat <- dat %>% filter(country == "United States",election == "Presidential",daysbeforeED <= 13)
dat <- select(polldate, electionyr, elecdate, daysbeforeED, poll_, vote_, inc_ )
dat %>% select(polldate, electionyr, elecdate, daysbeforeED, poll_, vote_, inc_ )
library(tidyverse)
load('~/Desktop/LONG_MI_NATURE_20180111.RData')
dat <- x
rm(x)
dat <- dat %>%
filter(country == "United States",election == "Presidential",daysbeforeED <= 13) %>%
select(polldate, electionyr, elecdate, daysbeforeED, poll_, vote_, inc_ )
View(dat)
library(tidyverse)
load('~/Desktop/LONG_MI_NATURE_20180111.RData')
dat <- x
rm(x)
dat$partyid
dat <- dat %>%
filter(country == "United States",election == "Presidential",daysbeforeED <= 13) %>%
select(polldate, electionyr, elecdate, daysbeforeED, poll_, vote_, partyid, inc_ )
library(tidyverse)
load('~/Desktop/LONG_MI_NATURE_20180111.RData')
dat <- x
rm(x)
dat <- dat %>%
filter(country == "United States",election == "Presidential",daysbeforeED <= 13) %>%
select(polldate, electionyr, elecdate, daysbeforeED, poll_, vote_, partyid, inc_ )
View(dat)
library(tidyverse)
load('~/Desktop/LONG_MI_NATURE_20180111.RData')
dat <- x
rm(x)
dat <- dat %>%
filter(country == "United States",election == "Presidential",daysbeforeED <= 13) %>%
select(polldate, electionyr, elecdate, daysbeforeED, poll_, vote_, partyid, gov_, inc_ )
View(dat)
library(tidyverse)
load('~/Desktop/LONG_MI_NATURE_20180111.RData')
dat <- x
rm(x)
dat <- dat %>%
filter(country == "United States",election == "Presidential",daysbeforeED <= 13,
!is.na(poll_)) %>%
select(polldate, electionyr, elecdate, daysbeforeED, poll_, vote_, partyid, gov_, inc_ )
View(dat)
library(tidyverse)
load('~/Desktop/LONG_MI_NATURE_20180111.RData')
dat <- x
rm(x)
names(dat)
library(tidyverse)
load('~/Desktop/LONG_MI_NATURE_20180111.RData')
dat <- x
rm(x)
dat <- dat %>%
filter(country == "United States",election == "Presidential",daysbeforeED <= 13,
!is.na(poll_)) %>%
select(polldate, electionyr, elecdate, daysbeforeED, poll_, sample,npolls,vote_, partyid, gov_, inc_ )
View(dat)
library(tidyverse)
load('~/Desktop/LONG_MI_NATURE_20180111.RData')
dat <- x
rm(x)
dat <- dat %>%
filter(country == "United States",election == "Presidential",daysbeforeED <= 13,
!is.na(poll_)) %>%
select(polldate, electionyr, elecdate, daysbeforeED, poll_, sample, npolls, vote_, partyid)
library(tidyverse)
load('~/Desktop/LONG_MI_NATURE_20180111.RData')
dat <- x
rm(x)
dat <- dat %>%
filter(country == "United States",election == "Presidential",daysbeforeED <= 13,
!is.na(poll_)) %>%
select(polldate, electionyr, elecdate, daysbeforeED, poll_, sample, npolls, vote_, partyid)
dat <- dat %>%
mutate(partyid = case_when(partyid == 1 ~ 'Democratic',
partyid == 2 ~ 'Republican',
partyid == 3 ~ 'Other'))
dat %>%
select(-vote_) %>%
spread(partyid, poll_)
dat %>%
select(-vote_) %>%
spread(partyid, poll_) %>% View
library(tidyverse)
load('~/Desktop/LONG_MI_NATURE_20180111.RData')
dat <- x
rm(x)
dat <- dat %>%
filter(country == "United States",election == "Presidential",daysbeforeED <= 13,
!is.na(poll_)) %>%
select(polldate, electionyr, elecdate, daysbeforeED, poll_, sample, npolls, vote_, partyid)
dat <- dat %>%
mutate(partyid = case_when(partyid == 1 ~ 'Democratic',
partyid == 2 ~ 'Republican',
TRUE ~ 'Other'))
dat %>%
select(-vote_) %>%
spread(partyid, poll_) %>% View
library(tidyverse)
load('~/Desktop/LONG_MI_NATURE_20180111.RData')
dat <- x
rm(x)
dat <- dat %>%
filter(country == "United States",election == "Presidential",daysbeforeED <= 13,
!is.na(poll_)) %>%
select(polldate, electionyr, elecdate, daysbeforeED, poll_, sample, npolls, vote_, partyid)
dat <- dat %>%
mutate(partyid = case_when(partyid == 1 ~ 'dem',
partyid == 2 ~ 'rep',
TRUE ~ 'other'))
dat %>%
select(-vote_) %>%
spread(partyid, poll_)
dat %>%
select(-vote_) %>%
spread(partyid, poll_) %>%
rename(dem_poll = dem,
rep_poll = rep,
other_poll = other)
library(tidyverse)
load('~/Desktop/LONG_MI_NATURE_20180111.RData')
dat <- x
rm(x)
dat <- dat %>%
filter(country == "United States",election == "Presidential",daysbeforeED <= 13,
!is.na(poll_)) %>%
select(polldate, electionyr, elecdate, daysbeforeED, poll_, sample, npolls, vote_, partyid)
dat <- dat %>%
mutate(partyid = case_when(partyid == 1 ~ 'dem',
partyid == 2 ~ 'rep',
TRUE ~ 'other')) %>%
filter(partyid != 'other')
dat %>%
select(-vote_) %>%
spread(partyid, poll_) %>%
rename(dem_poll = dem,
rep_poll = rep,
other_poll = other)
dat %>%
select(-vote_) %>%
spread(partyid, poll_) %>%
rename(dem_poll = dem,
rep_poll = rep) %>%
left_join(
dat %>%
select(-poll_) %>%
spread(partyid, vote_) %>%
rename(dem_vote = dem,
rep_vote = rep)
)
library(tidyverse)
load('~/Desktop/LONG_MI_NATURE_20180111.RData')
dat <- x
rm(x)
dat <- dat %>%
filter(country == "United States",election == "Presidential",daysbeforeED <= 13,
!is.na(poll_)) %>%
select(polldate, electionyr, elecdate, daysbeforeED, poll_, sample, npolls, vote_, partyid)
dat <- dat %>%
mutate(partyid = case_when(partyid == 1 ~ 'dem',
partyid == 2 ~ 'rep',
TRUE ~ 'other')) %>%
filter(partyid != 'other')
dat <- dat %>%
select(-vote_) %>%
spread(partyid, poll_) %>%
rename(dem_poll = dem,
rep_poll = rep) %>%
left_join(
dat %>%
select(-poll_) %>%
spread(partyid, vote_) %>%
rename(dem_vote = dem,
rep_vote = rep)
)
View(dat)
51.11347 + 48.88653
group_by(electionyr) %>%
summarise(dem_margin_poll = weighted.mean(dem_margin_poll, sample))
group_by(electionyr) %>%
summarise(dem_margin_poll = weighted.mean(dem_margin_poll, sample))
names(dat)
dat %>%
mutate(dem_margin_poll = dem_poll - rep_poll,
dem_margin_vote = dem_vote - rep_vote) %>%
group_by(electionyr) %>%
summarise(dem_margin_poll = weighted.mean(dem_margin_poll, sample))
dat %>%
mutate(dem_margin_poll = dem_poll - rep_poll,
dem_margin_vote = dem_vote - rep_vote) %>%
group_by(electionyr) %>%
summarise(dem_margin_poll = weighted.mean(dem_margin_poll, sample),
dem_margin_vote = unique(dem_margin_vote))
dat %>%
mutate(dem_margin_poll = dem_poll - rep_poll,
dem_margin_vote = dem_vote - rep_vote) %>%
group_by(electionyr) %>%
summarise(dem_margin_poll = weighted.mean(dem_margin_poll, sample),
dem_margin_vote = unique(dem_margin_vote)) %>% View
View(dat)
library(tidyverse)
load('~/Desktop/LONG_MI_NATURE_20180111.RData')
dat <- x
rm(x)
dat <- dat %>%
filter(country == "United States",election == "Presidential",daysbeforeED <= 13,
!is.na(poll_)) %>%
select(polldate, electionyr, elecdate, daysbeforeED, poll_, sample, npolls, vote_, partyid)
View(dat)
library(tidyverse)
load('~/Desktop/LONG_MI_NATURE_20180111.RData')
dat <- x
rm(x)
View(dat)
52.90001 - 45.70000
dat %>%
filter(country == "United States",election == "Presidential",daysbeforeED <= 13,
!is.na(poll_)) %>% View
dat <- dat %>%
filter(country == "United States",election == "Presidential",daysbeforeED <= 13,
!is.na(poll_)) %>%
select(polldate, electionyr, elecdate, daysbeforeED, poll_, sample, npolls, vote_, partyid)
dat <- dat %>%
mutate(partyid = case_when(partyid == 1 ~ 'dem',
partyid == 2 ~ 'rep',
TRUE ~ 'other')) %>%
filter(partyid != 'other')
dat <- dat %>%
select(-vote_) %>%
spread(partyid, poll_) %>%
rename(dem_poll = dem,
rep_poll = rep) %>%
left_join(
dat %>%
select(-poll_) %>%
spread(partyid, vote_) %>%
rename(dem_vote = dem,
rep_vote = rep)
)
dat %>%
mutate(dem_margin_poll = dem_poll - rep_poll,
dem_margin_vote = dem_vote - rep_vote) %>%
group_by(electionyr) %>%
summarise(dem_margin_poll = weighted.mean(dem_margin_poll, sample),
dem_margin_vote = unique(dem_margin_vote)) %>% View
dat %>%
mutate(dem_margin_poll = dem_poll - rep_poll,
dem_margin_vote = dem_vote - rep_vote) %>%
group_by(electionyr) %>%
summarise(dem_margin_poll = weighted.mean(dem_margin_poll, sample),
dem_margin_vote = unique(dem_margin_vote)) %>%
mutate(error = dem_margin_vote - dem_margin_poll) %>% View
